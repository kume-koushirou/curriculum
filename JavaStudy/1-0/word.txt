・IT
コンピュータとネットワークを利用した技術のこと

・ICT
ITとほぼ同じ意味ですが、個人からの情報発信を強調するニュアンスがある
ICTの方が広く普及している

・Iot
Internet of Thingsの略
物のインターネットという意味
遠隔制御、遠隔監視、離れた者同士で任意データ送受信ができます。

・OS
Operating Systemの略
システム全体を管理し、様々なアプリケーションソフトを動かすための最も基本的なソフトウェア
パソコンには必ず入っている、入っていなければ動かない
ハードウェア（CPU,メモリ、ハードディスク、周辺機器等）をOSが取りまとめ、操作のしやすさを一定に保つ
Microsoft、Appleのハードウェア面に違いはない。
広く普及してるのがWindows,デザイナー・クリエイターに普及しているのがMacintosh

・Windows
Microsoft社のWindows OS が搭載されたパソコンをWindowsパソコンと呼ぶ。ハードウェア面に違いはない。

・macOS(Mac OS X)
AppleのMac OSが搭載されたパソコンをMacintosh(Mac)パソコンと呼ぶ。ハードウェア面に違いはない。

・UNIX
OSの一種、一番古いOSの1つ。特徴は安全性が高く、余計な機能が少ないので軽いことが特徴、また安いのも特徴。
使われているのがカーナビや携帯電話
企業が開発して、知的財産権が企業に属している

・Linux
安定的に動いて、費用がかからないというのが特徴。
使われているのはスマホなどで、AndroidはLinux。
オープンソースで無料、改変配布が自由

・言語・環境
・マークアップ/フロントエンド
文書構造（テキスト）や視覚表現（装飾）などの情報を、コンピューターが正しく認識できるように、タイトルや見出しなどの各要素に「タグ」と呼ばれる識別のための目印を使い、意味付けを行っていくことを意味する。

・HTML
ハイパー・テキスト・マークアップ・ランゲージの略
ウェブページを作成するために開発された言語。ほとんどのインターネット上で公開されているWebページはHTMLです。

・CSS
カスケーティング・スタイル・シートの略
Webページのスタイルを指定するための言語
HTMLと組み合わせて使用する言語
HTMLがWebページ内の各要素の意味や情報構造を定義するのに対して、CSSではそれらをどのように装飾するかを指定する。

・JavaScript
動的にコンテンツを更新したり、マルチメディアを管理したり、その他多くのことができるスクリプト言語

・サーバーサイド
・.Net(c#,VB)
標準言語C#を使ったマイクロソフト社製のコンパイラ（及びその機能群）のこと
.NET Frameworkの略
マイクロソフト社がインターネット時代に対応するべくXML仕様を土台にしたプログラムの部品化技術の開発をおこなったもの
C#は、標準言語の内の一つ
マイクロソフト社によって同社の.NET戦略の一環として開発されたオブジェクト指向プログラミング言語です。
C++を標準言語として使っていたが仕様が大きく変わったため、新しく作ったのがC#です
VB.NETはMicrosoftが開発したプログラミング言語
NET系のアプリ開発ができ初めてでも学びやすい言語
画面を使ったアプリも簡単に作れる

・Java
世界で使用されている言語、習得したい言語1位を記録するほど実績のある言語
人気の理由はJavaは多くの現場で使われている、汎用的でOSに依存しないの理由がある
OSに依存しない点は重要で、安定して動作するプラットフォームを提供してくれるJavaは人気
様々な言語の元になっている点も優れている
どんな環境でもソフトを動かすことができる
webアプリケーションのサーバーサイドプログラムを組めるし、金融システムなど厳しい要件にも対応できる
メリットは処理速度が速い、プラットフォームに依存しない、オブジェクト指向である
デメリットはプログラミング以外の作業が大変（インフラの準備など）
学習コストが高い

・Java SE
Javaの基本機能をまとめたもの
JDKをインストールしておく必要がある

・Java EE(Jakarta EE)
JavaSEを元にしてサーバーサイドの機能を追加したもの
JavaSE+拡張機能

・Perl
テキスト処理が得意なスクリプト言語で、値と文字列の自動変換機能、強力な正規表現が言語に組み込まれている
処理速度も比較的高いので人気です

・PHP
HTMLに組み込むことができるので、web開発でよく使われているスクリプト言語
JavaScriptはクライアントサイド（webサイトを閲覧しているブラウザ）がコードを受け取り、そこで動作する
そのため、どのようなコードが書かれているか誰でも見ることができます
一方、PHPはサーバーサイドでコードを実行します。クライアントサイドはその結果のみを受け取るため、どのようなコードで導き出された結果なのか見ることができない

・Ruby
オブジェクト指向スクリプト言語
プログラミングを手軽に行える
オブジェクト指向なので、全てのデータがオブジェクトとして表示される
Ruby on Railsというwebアプリケーションフレームワークを使うことができる

・サーバーソフト
・Apache
webサーバーソフトウェア(HTTPサーバー)のこと
サーバーの構築に必須なのがwebサーバーソフトウェア
CMS(Contents Management System)を利用する際に、比較的簡単な設定で済む
公式非公式問わず技術情報が膨大にある
レンタルサーバープランにあら家事ね組み込まれていることが多い
公開ページをさらに高速化表示する対策が行われている
セキュリティ対策が随時更新されているので安心
オープンソースソフトウェアで、無償で利用可能
約20年間OSSで公開され、バージョンアップして信頼性が高い
CMSwo動かすためのPHPやデータベースと連携がしやすい
モジュール（部品または要素）により基本機能を拡張
LinuxだけでなくWindowなど複数のサーバーOS上で利用可能

・nginx
Apacheに慣れていれば普通に利用できる。
Apacheの次にシェアされています。
メリットは高速、大量処理が得意、webサイト利用を向上させる機能が豊富、設定は意外に用意
違い
Apache
同時、複数アクセスへの対処の仕方
=１アクセスに対して、1つの対応
アクセス急増時のサーバーへの負荷
=一気に負荷増
その結果WEBサーバーの動き
=遅くなり、ダウンしやすくなる
Nginx
同時、複数アクセスへの対処の仕方
=複数のアクセスに対して、１つの対応にまとまる
アクセス急増時のサーバーへの負荷
=アクセスに比例して負荷は急激に増えない
その結果WEBサーバーの動き
=処理速度は維持し、ダウンしにくい
デメリット
大量の動的コンテンツの処理に不向き
機能追加のしやすさ
初心者向けの設定情報の少なさ

IIS
IISとはMicrosoft社が提供するWindowsのWebサーバーソフトです。
無料で利用できるwebサーバーソフト。
WEBサーバーソフトの比較表（私見）
IIS
シェア 第一位（32％）
用途 Windows
利用できる主な言語 ASP.Netなど
信頼性 かなり高い
利用サイト規模 大規模
動作速度 速い
操作方法 視覚的にマウス操作
料金 無料
難易度 比較的に優しい
Apache
シェア 第二位（27％）
用途 Linux
利用できる主な言語 PHPなど
信頼性 高い
利用サイト規模 大規模~小規模
動作速度 速い
操作方法 コマンド入力
料金 無料
難易度 やや難しい
Nginx
シェア 第三位（25％）
用途 Linux
利用できる主な言語 PHPなど
信頼性 高い
利用サイト規模 大規模~小規模
動作速度 より速い
操作方法 コマンド入力
料金 無料
難易度 難しい
IISのメリット
使いやすい
安心
豊富な機能

・SQL
・SQL
リレーショナルデータベース管理システム（System R)→SEQUEL→SQLの流れで変化してきた
データベース言語で最も普及している言語で、DBMS(データベース管理システム)上でデータやデータベースを制御するための言語でユーザーまたはシステムから命令を受けてRDB(リレーショナルデータベース)にクエリ(問い合わせ)を行い結果を返します。
SQLはデータベース言語であり、データベースを管理するソフトウェアを操作・制御することが目的です。
全て命令文で動詞と目的語を組み合わせた構文です。

・DB2
米IBM社のリレーショナルデータ管理システム(RDBMS)及び関連ソフトウェアのブランド名。
幅広いプラットフォームに対応している。
大企業や官庁などの大規模システム、基幹システムでの利用が多い

・MySQL
特徴
webサイトの急増に伴うCMSno発展
オープンソースなので基本的に無料
Linux,Windows,Mac OS Xなど複数のOSで利用可能
巨大サイトの利用に耐える頑強さ
操作方法はシンプル
巨大企業オラクルが開発

・MariaDB
オープンソースリレーショナルデータベースで、MySQLのブランチに相当し、意識的にMySQL互換性を保ちながら開発される
性能や堅牢性を高めるために独自機能を追加して、より良いデータベースのために開発している
MySQLとの高い後方互換性を持つ、MySQLの不具合修正を定期的に反映、MySQLのソースコードをベースにいくつかの機能を追加
MySQLの性能に匹敵する

・OracleDB
オラクル社が開発・販売しているリレーショナルデータベース管理システム
エスカレーションが発生しない（最小単位の行レベルで排他制御するため、同時に多くのユーザーのリクエスト処理ができる）
読み取り一貫性（検索時点でのデータが読み取られることを保証、更新されたデータも読み取る）
拡張機能（パフォーマンス向上機能、拡張性・可用性を実現するための機能、データベース管理者・開発者を支援する様々なツール

・PostgreSQL
リレーショナルデータベース管理システム
オープンソースなので用途を問わず無料で使える
著作権の表示と免責事項を明記すれば自由に再利用・再配布を行えるBSDライセンスを採用し、機能を追加・改修され様々な場面で利用されている

・SQLite
オープンソースで軽量のRDMSです
SQLiteはデータベース名
サーバーとしてではなくアプリケーションに組み込み利用するので簡易的
パドリックメインのオープンソースなのでソースコードを自由に改変して再配布できる
設定不要で利用できる、自己完結型システムでマルチプラットフォームに対応できる・対応OS(Linux/Windows/Mac/Android/iosなど）,データ型の指定が緩いのでデータ型の指定を強制しない

・SQL Server
マイクロソフト社が開発したRDBMSでMS SQLとも呼ぶ
windows OSと相性がいいが基本的に有料（無償で利用可能なエディションもある）
メリット
直感的に操作できる（GUI)
独自拡張のTransact-SQLが使える、T-SQLはSQLの使い方がわかればさらに高度なデータベース操作が行える
システム規模に合わせたエディションが豊富（大規模~小規模）

・CRUD
システムに必要な4つの主要機能（登録機能『Create』、参照機能『READ』、変更機能『Update』、削除機能『Delete』

・トランザクション（処理）
データベースの話で出てくる『ここからここまでワンセット』な処理単位（処理のまとまりを表す用語）

・コミット
『ここからここまでワンセット』な処理（トランザクション処理）において、あれやこれやといった結果を確定させること{やった結果を確定させること、あるいは約束すること}

・ロールバック
システム障害やデータの喪失、破損が起きた時正常に戻す作業（復旧）を試みること

・排他制御（排他ロック）
複数の主体が同じ資源を同時に利用すると競合状態が生じる場合、ある主体が資源を利用している間、別の主体による資源の利用を制限もしくは禁止する仕組み（データの生合成を保つ）

・楽観ロック
排他制御の代表的な方式の一つで、『同時アクセスはあまり起きない』という楽観的な考え方の排他制御（データ自体をロックせず、更新対象のデータが更新前と同じであるかを確認してから更新することで、データの整合性を保つ）

・悲観ロック
排他制御の代表的な方式の一つで同じデータを他者が頻繁に更新するという悲観的な前提の排他制御（更新対象データを取得時にロックして他者が操作できないようにする）

・実行計画
SQLがOracleで実行される手順を示す。
不適切な実行計画でSQLが実行されると、本来であれば実現できる処理パフォーマンスを得られない
含まれる情報はツリー構造をしたステップ、各ステップの統計値、sql_id:SQL分の識別子（Oracleが自動的に付与）、実行計画のハッシュ値、SQL文、補足情報です

・チューニング
システムやプログラムなど改良し、パフォーマンスの向上を図ること

・パフォーマンス
コンピュータなどの機器やソフトウェア、システムなどの処理性能や実行速度、通信回線・ネットワークなどの伝送速度・容量などのことを指す

・スロークエリ
データベースにおいて、時間のかかっているSQL(遅いSQL)のことをスロークエリと呼ぶ

・クエリログ
実行したSQLクエリの履歴が全て記録されていくログのこと
障害対応などがあるときに重要な役割を果たす
システム稼働時はよほどのことがない限り出力する

・IDE（統合開発環境）
ソフトウェア開発に必要なソフトウェアを一つに組み合わせ、同じ操作画面から統一的な操作方法で利用できるようにしたソフトウェアパッケージ。
一般的にはコードエディタやコンパイラ、リンカ、デバッカ、テストツール、バージョン管理ソフトなどで構成される

・Eclipse
Javaを始めとする様々なプログラミング言語によるソフトウェア開発に対応した、オープンソースの統合開発環境（IDE)の一つ

・NetBeans
プロジェクト管理機能や入力支援機能を備えたオープンソースのIDEです。
Javaアプリケーション開発の統合環境として開発が始められたが、現在はJavascriptやPHP、CおよびC++などのプログラミング言語をサポートしている

・SpringToolSuite
Spring専用の統合開発環境で、Eclipseをベースにしている

・DBツール
データベース管理タスクに使用できるツール、ユーティリティおよび補助ツールの総称
類似するタスクを実行できるデータベース・ツールもあるが、1つのデータベース・ツールで全ての管理タスクを実行することができない

・A5:SQL Mk-2
データベース開発において生産性を向上させるべく開発されたSQL開発ツール
SQLの実行・テーブルの編集・ストアドプロシージャの実行・ER図の作成,,etcを行える

・pgAdmin
GUIによるPostgreSQLの管理ツール
接続したDBのインスタンス表示
新規DB、テーブル、ログインロール作成（権限あれば）、SQLの実行も可能
またDBインスタンスの状態がグラフィカルな状態で表示できるというGUI管理ツールとしての一通りの機能を備えている

・DBeaver
DBeaver Corpが開発したマルチプラットフォーム対応のSQLクライアントツール
対応しているDBはMySQL,PostgreSQL,SQLite,Oracle,MariaDB,Amazon<Redshiftなど
全文検索エンジン（Elasticsearch）やHadoopの上構築されたデータウェアハウス（Apache Hive)など様々なデータ分析ツールに対応している

・MySQL Workbench
データベースの設計・開発・管理を一本で表現している無料ツール。
コマンドラインでなくビジュアル操作（GUI)に対応しておりコマンド入力苦手な人におすすめ

・Sequel Pro
Mac用のMySQLのデータをGUI操作で管理するためのアプリケーション

・TeamSQL
ssh接続は一台先まで、他のツールよりも重い（テーブル名を選択してからデータが表示されるまでに一瞬待つ）のが気になる、会員登録必要

・PM
プロダクトマネージャー
プロジェクトの運営、品質、納期等に責任を持ちプロジェクトを円滑に推進させる役割を果たすプロジェクト管理者のこと
業務内容はプロジェクトメンバーの選定、顧客折衝、案件受注、要件定義、品質管理、納期・進捗管理、コスト管理等があります。

・PL
システムの構築・導入プロジェクトにおいて、プロジェクトチームを管理・統括する業務
複数人で担当する

・PG（PE）
SEが作成した仕様書を元に実際にコードを書いてシステムを組んでいく業務

・SE
要件定義、仕様書の作成、コーディング、テスト作業といったシステム開発安全圏に関わっていきます
要件分析および要件定義、基本設計、詳細設計、テストなど

・デザイナー
様々なWEBサイトのデザインを行う仕事。WEBディレクターを中心にプロジェクトチームを組み、他の業務を果たすスタッフと連携して1つのWEBサイトを作成する

・エンジニア
情報技術の技術者たちの総称

・フロントエンド・エンジニア
WEBアプリケーションなどでユーザーが画面越しに触れる部分、つまりフロントエンドの設計や構築を行う職種
デザイナーが設計したデザインを元にHTML,CSS,Javascriptを駆使しブラウザに表示できるようコーディングを実施します

・サーバーサイド・エンジニア
サーバー側で動作するプログラムの開発やデータ処理などを行うエンジニアを指す

・バックエンド・エンジニア
プログラムの開発からWEBサーバー、データベースといった環境整備まで幅広く担当するWEB系の技術者。
主にユーザーから見えない裏側のシステム部分を構築します
就く仕事によってはシステム開発だけでなく、運営や管理までトータルで行う場合もある

・UI
User Interface
1,画面 2,見た目 3,使い勝手のどれかを指してユーザーインターフェースと表現する

・CUI
キーボードでしか操作できない画面のこと

・GUI
マウスや指などで操作できる画面のこと

・ファイル
情報システムにおいて外部記憶装置を使って情報を一つの塊として扱うための単位のこと
ファイルは1つの単位となり編集、削除、コピー、読み込み、書き込みなどの操作の対象になる

・拡張子
ファイルの種類や形式を表すために利用者やソフトウェアによって付与されるもので１~4文字程度の半角英数字の組み合わせを用いられる
ファイル名.拡張子のように書く

・ディレクトリ
ストレージ（外部記憶装置）のファイルシステムなどで、複数のファイルを格納し、ファイルを分類・整理することができる保管場所のことをディレクトリという
OSによっては同様の仕組みをフォルダという

・ルート・ディレクトリ
ディレクトリを枝分かれ構造で表現した際の根っこ部分に相当するディレクトリ

・カレント・ディレクトリ
自分が今いるディレクトリのこと

・絶対パス
いつでもどこでも同じ表現が使える場所に示し方が絶対パス
一番上から全部説明したファイルやフォルダの場所のこと

・相対パス
自分が今いるところを基準にして表現したファイルやフォルダの場所
ファイル、フォルダの位置を自分が今いる位置を基準にしているので、いる場所によって表現方法が変わる場所の示し方が相対パス

・LAN
限られた範囲内にあるコンピュータや通信機器、情報機器などをケーブルや無線電波などで接続し、相互にデータ通信できるようにしたネットワークのこと
概ね室内あるいは建物内程度の広さで構築される

・WAN
Wide Area Network(広域通信網)の略。市街地から郊外、県外、海外に広がった広域ネットワークのこと
点在するLAN(Local Area Network)とLANを結ぶ公衆網をいう
WANを世界規模で実現しているのがインターネット

・クライアント
利用者側のコンピュータ、あるいはお客さまのこと

・サーバー
サービスや機能を提供する側のコンピュータ、もしくは、サーバ用のコンピュータ

・HTTP
ホームページのファイルを受け渡しするときに使うお約束事

・FTP
ファイルを送受信する仕組み

・HTTPS
通信内容が暗号化されるHTTPのこと

・SSL
クライアント側、サーバー側で公開鍵を持ち通信するときにお互いの鍵を合わせて共通鍵を持ったとき初めて中身を観れるようになる
SSLは、公開鍵暗号方式で共通鍵の受け渡しを行い、あとは受け渡した共通鍵を使って共通鍵暗号方式（秘密鍵暗号方式）でやり取りすることで、通信の安全性を高める仕組みです。
わかりやすくすると公開鍵を通信するお互いが持ち、中身を見るときに共通鍵で開きインターネット上の通信を暗号化する仕組み

・SSH
ネットワークを経由して他のコンピュータ（主にサーバ）に接続し、遠隔操作するための仕組み、通信途中の情報は全部暗号化されます。telnetは暗号化されないので、SSHの方が安全

・ポート、ポート番号
ポート番号とは、インターネットで標準的に用いられるプロトコル（通信規約）であるTCP/IPにおいて、同じコンピュータ内で動作する複数のソフトウェアのどれが通信するかを指定するための番号。 「ポート」と略されることもある
ポートは扉のようなものでポート番号はその扉の番号

・HTTP、FTP、SSHの各ポート番号
HTTP=80,FTP=21,SSH=22

・ファイアウォール
信頼できない外部ネットワークの攻撃から内部ネットワークを保護するシステムである
主に外部ネットワークと内部ネットワークの中継地点に設置され、セキュリティ上通信させると問題があるようなものを制御、監視する。 必要な通信は通過させ、不要な通信を遮断することで内部ネットワークを保護している

・TCP
送ったデータが相手に届いたか、その都度確認しながら通信するやり方
特徴
信頼性は高いが転送速度が低い
１．漏れなく伝わる可能性は高い
２．スピードは遅くなる
通信する上でのお約束事のひとつで、安全性重視でやり取りするやり方

・IPアドレス
インターネットをするときにコンピュータに割り当てられる住所のこと
通信において、送信先を特定するときに使われます。
「DHCPサーバ」に割り振られたり、自分で設定できる（コンピュータ内の設定に依存する）
IPアドレスは前半はネットワーク部で、後半がホスト部になっている

・グローバルIPアドレス
インターネット上で機器やネットワークを識別・同定するのに用いられる番号であり、インターネットで通信を行うためには必ず必要となる。
グローバルIPアドレスとは、インターネットで相手と通信するために持つ、ほかのアドレスと重複しない一意のIPアドレスのこと。 TCP/IPでは、通信相手を特定してIPパケットを送信したり、ルーティングするために必要となる。

・プライベートIPアドレス
プライベートIPアドレスとは、LANなどの企業内ネットワークに存在する端末が、自由に使用できるIPアドレスのこと。 自ネットワーク内でのみ一意であるため、ほかのネットワークでは同じプライベートアドレスが利用されている可能性がある。

・ドメイン
ドメイン名は「IPアドレスに付けた人間様向けの名前」です。
URL（ホームページの住所に相当する情報）においては「http://」や「https://」の後ろの部分がドメイン名です。
「https://i-3-i.info/index.html」であれば「i-3-i.info」の部分

メールアドレスにおいては「@」の後ろの部分がドメイン名です。
「hoge@example.com」であれば「example.com」の部分
「領域」や「範囲」等の意味を持つ用語が「ドメイン」です。

・DNS
IPアドレスとドメイン名の対応を管理する仕組み
ドメイン名からIPアドレスに変換するのは「正引き」と言います。
IPアドレスからドメイン名に変換するのは「逆引き」です。
これをすることがDNSという仕組み

・VPN
普通の電話線やインターネットの線を使いながらも専用線を使ってるかのような安全性をめざした！」サービス
「仮想プライベートネットワーク」「仮想専用線」ともいう。 以前は固定された電話回線を専用線として使っていたが、最近ではインターネット回線を利用し、暗号化などのセキュリティ機能も使って安全なデータ通信を実現している。

・ブリッジ
ネットワーク中のデータ（の中にあるMACアドレス）を見て、行き先を振り分けてくれる機器のことです。
IPアドレスは「最終的にどこに届けるか」を表現するときに使う情報です。
一方のMACアドレスは「次に、どこに届けるか」を表現するときに使います。
次どこに持っていくか（MACアドレス）はその時々で書き換わっていきますが、最終的なお届け先（IPアドレス）は最初から最後まで一緒です。
ネットワークを流れるデータには「目的地（IPアドレス）」と「次の渡し先（MACアドレス）」が書いてある
MACアドレスを見て交通整理をするのがブリッジ、IPアドレスを見て交通整理をするのがルータです
MACアドレスを見てデータの行き先を振り分けてくれる機器

・プロキシサーバー
プロキシサーバを使うメリットは
(1)．身元を隠せる
(2)．場合によってはホームページへのアクセスが速くなる
webブラウザの代わりに情報をサーバーからもらい、キャッシュが絡むとプロキシサーバがその内容を前に見て覚えていると新しいページを貰いにいくこともなく表示しもらいに行かない分だけ早くなる
簡単に言えばWebブラウザさんの身代わりです


